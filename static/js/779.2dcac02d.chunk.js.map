{"version":3,"file":"static/js/779.2dcac02d.chunk.js","mappings":"6PAEaA,EAAOC,EAAAA,EAAAA,GAAH,6CAGJC,EAAOD,EAAAA,EAAAA,GAAH,mIAMJE,EAAQF,EAAAA,EAAAA,GAAH,4CAGLG,EAAUH,EAAAA,EAAAA,EAAH,gD,SCsCpB,EA7CgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbI,MAAM,WAAD,OACQC,EAAAA,GADR,kBAC0BR,EAD1B,2CACoES,EAAAA,GADpE,YAGFC,MAAK,SAAAC,GACJ,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAAG,GACJ,OAAOd,EAAWc,EAAIC,QACvB,IACAC,OAAM,SAAAC,GAAK,OAAIX,EAAWW,EAAMC,QAArB,IACXC,QAAQf,GAAa,GACzB,GAAE,CAACH,KAEJM,EAAAA,EAAAA,YAAU,WACRa,OAAOC,SAAS,EAAG,IACpB,GAAE,CAACtB,KAGF,2BACsB,IAAnBA,EAAQuB,SAAgB,uBAAG,6CACR,IAAnBvB,EAAQuB,SACP,SAAC7B,EAAD,UACGM,EAAQwB,KAAI,SAAAC,GACX,OACE,UAAC7B,EAAD,YACE,UAACC,EAAD,WAAO,YAAU4B,EAAOC,WACxB,SAAC5B,EAAD,UAAU2B,EAAOE,YAFRF,EAAOG,GAKrB,MAGJxB,IAAa,SAACyB,EAAA,EAAD,IACbvB,IAAW,gBAAIwB,UAAU,SAAd,UAAuB,UAAQxB,EAAQ,qBAGxD,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const Item = styled.li`\n  background-color: rgba(150, 50, 100, 0.2);\n  padding: 20px;\n  border-radius: 20px;\n  margin: 20px 0;\n`;\nexport const Title = styled.h5`\n  font-size: 20px;\n`;\nexport const Content = styled.p`\n  text-align: justify;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY } from 'components/App';\nimport { BASE_URL } from 'components/App';\nimport { Loader } from 'components/Loader/Loader';\nimport { List, Item, Title, Content } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\n      `https://${BASE_URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}&page=1`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(res => {\n        return setReviews(res.results);\n      })\n      .catch(error => setIsError(error.message))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  useEffect(() => {\n    window.scrollTo(0, 700);\n  }, [reviews]);\n\n  return (\n    <div>\n      {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\n      {reviews.length !== 0 && (\n        <List>\n          {reviews.map(review => {\n            return (\n              <Item key={review.id}>\n                <Title>Author : {review.author}</Title>\n                <Content>{review.content}</Content>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n      {isLoading && <Loader />}\n      {isError && <h5 textAlign=\"center\">Sorry. {isError} ðŸ˜­</h5>}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["List","styled","Item","Title","Content","useState","reviews","setReviews","movieId","useParams","isLoading","setIsLoading","isError","setIsError","useEffect","fetch","BASE_URL","API_KEY","then","response","json","res","results","catch","error","message","finally","window","scrollTo","length","map","review","author","content","id","Loader","textAlign"],"sourceRoot":""}