{"version":3,"file":"static/js/884.cab78aa0.chunk.js","mappings":"8MAgFA,UAxEqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAEpDC,EAAAA,EAAAA,YAAU,WACRT,GAAa,GACbU,MAAM,WAAD,OACQC,EAAAA,GADR,kBAC0Bd,EAD1B,mCAC4De,EAAAA,KAE9DC,MAAK,SAAAC,GACJ,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAAG,GACJ,OAAOpB,EAASoB,EACjB,IACAC,OAAM,SAAAC,GAAK,OAAIhB,EAAWgB,EAAMC,QAArB,IACXC,QAAQpB,GAAa,GACzB,GAAE,CAACH,IAEJ,IAAQwB,EACN1B,EADM0B,YAAaC,EACnB3B,EADmB2B,MAAOC,EAC1B5B,EAD0B4B,aAAcC,EACxC7B,EADwC6B,SAAUC,EAClD9B,EADkD8B,OAAQC,EAC1D/B,EAD0D+B,aAG5D,OACE/B,EAAMgC,KACJ,4BACE,SAAC,KAAD,CAAMC,GAAIvB,EAAawB,QAAvB,SAAgC,aAChC,gBACEC,IAAG,0CAAqCT,GACxCU,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,0BACGX,EAAM,KAAGC,EAAaW,OAAO,EAAG,GAAG,SAEtC,yBAAG,eAAaC,KAAKC,MAAMV,GAAc,QACzC,wBAAI,cACJ,uBAAIF,KACJ,wBAAI,YACJ,uBACGC,EAAOY,KAAI,SAAAC,GACV,OAAOA,EAAMC,IACd,OAEH,4BACE,wBAAI,4BACJ,2BACE,0BACG,KACD,SAAC,KAAD,CAAMX,GAAI,OAAV,SAAkB,WAFX,SAIT,0BACG,KACD,SAAC,KAAD,CAAMA,GAAI,UAAV,SAAqB,cAFd,cAKV7B,IAAa,SAAC,IAAD,IACbE,IAAW,gBAAIuC,UAAU,SAAd,UAAuB,UAAQvC,EAAQ,uBAErD,SAAC,EAAAwC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAKT,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { API_KEY } from 'components/App';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { BASE_URL } from 'components/App';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\n      `https://${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(res => {\n        return setMovie(res);\n      })\n      .catch(error => setIsError(error.message))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  const { poster_path, title, release_date, overview, genres, vote_average } =\n    movie;\n\n  return (\n    movie.id && (\n      <div>\n        <Link to={backLinkHref.current}>Go back</Link>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt=\"\"\n          width=\"130\"\n          height=\"200\"\n        />\n        <h2>\n          {title}( {release_date.substr(0, 4)} )\n        </h2>\n        <p>User score: {Math.floor(vote_average)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>\n          {genres.map(genre => {\n            return genre.name;\n          })}\n        </p>\n        <div>\n          <h5>Additional information</h5>\n          <ul>\n            <li key={'cast'}>\n              {' '}\n              <Link to={'cast'}>Cast</Link>\n            </li>\n            <li key={'reviews'}>\n              {' '}\n              <Link to={'reviews'}>Reviews</Link>\n            </li>\n          </ul>\n          {isLoading && <Loader />}\n          {isError && <h5 textAlign=\"center\">Sorry. {isError} ðŸ˜­</h5>}\n        </div>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    )\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movie","setMovie","movieId","useParams","isLoading","setIsLoading","isError","setIsError","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetch","BASE_URL","API_KEY","then","response","json","res","catch","error","message","finally","poster_path","title","release_date","overview","genres","vote_average","id","to","current","src","alt","width","height","substr","Math","floor","map","genre","name","textAlign","Suspense","fallback"],"sourceRoot":""}