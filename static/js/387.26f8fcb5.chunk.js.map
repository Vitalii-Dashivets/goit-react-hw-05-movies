{"version":3,"file":"static/js/387.26f8fcb5.chunk.js","mappings":"wQAEaA,EAAYC,EAAAA,EAAAA,IAAH,2EAMTC,EAAOD,EAAAA,EAAAA,GAAH,8HAQJE,EAAOF,EAAAA,EAAAA,GAAH,6TAcJG,EAAOH,EAAAA,EAAAA,EAAH,2GAMJI,EAAWJ,EAAAA,EAAAA,EAAH,+C,SC2BrB,EArDa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,GAAU,WAAD,OACIC,EAAAA,GADJ,kBACsBR,EADtB,2CACgES,EAAAA,KAEtEC,MAAK,SAAAC,GACJ,OAAOZ,EAAUY,EAAIC,KACtB,IACAC,OAAM,SAAAC,GAAK,OAAIT,EAAWS,EAAMC,QAArB,IACXC,QAAQb,GAAa,GACzB,GAAE,CAACH,KAEJM,EAAAA,EAAAA,YAAU,WACRW,OAAOC,SAAS,EAAG,IACpB,GAAE,CAACpB,KAGF,UAACP,EAAD,WACqB,IAAlBO,EAAOqB,SACN,SAAC1B,EAAD,UACGK,EAAOsB,KAAI,SAAAC,GACV,OACE,UAAC3B,EAAD,YACE,gBACE4B,IACED,EAAME,aAAN,0CACuCF,EAAME,cAlC/D,uIAqCgBC,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,SAAC/B,EAAD,UAAO0B,EAAMM,QACb,UAAC/B,EAAD,WAAU,aAAWyB,EAAMO,eAZlBP,EAAMQ,GAepB,MAGc,IAAlB/B,EAAOqB,SAAgB,uBAAG,6BAE1BjB,IAAa,SAAC4B,EAAA,EAAD,IACb1B,IAAW,gBAAI2B,UAAU,SAAd,UAAuB,UAAQ3B,EAAQ,qBAGxD,C,sBC9DD,SAAS4B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO3B,GAEP,YADAqB,EAAOrB,EAET,CACI0B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO/B,KAAK0B,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C,sDC7BO,SAAe7C,EAAtB,+CAAO,OAAP,cAAO,WAAyB8C,GAAzB,iFACQC,MAAMD,EAAK,CACtBE,QAAS,CACPC,OAAQ,mBACRC,cAAe,sCAEhB/C,MAAK,SAAAgD,GACN,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IAXI,0G","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/fetch-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 940px;\n  margin: :0;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  margin: 0;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n  background-color: rgba(100, 10, 10, 0.2);\n  width: 200px;\n  height: 300px;\n  border-radius: 10px;\n  padding: 10px;\n  box-shadow: 5px 5px 5px rgba(100, 100, 100, 0.3);\n`;\n\nexport const Name = styled.p`\n  font-size: 25px;\n  font-weight: 600;\n  margin: 15px 0;\n  text-align: center;\n`;\nexport const RoleText = styled.p`\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchData } from 'services/fetch-api';\nimport { API_KEY } from 'components/App';\nimport { BASE_URL } from 'components/App';\nimport { Loader } from 'components/Loader/Loader';\nimport { Item, List, Name, RoleText, Container } from './Cast.styled';\nconst DEFAULT_IMG =\n  'https://st.depositphotos.com/17828278/57681/v/1600/depositphotos_576814612-stock-illustration-image-vector-symbol-shadow-missing.jpg';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData(\n      `https://${BASE_URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n    )\n      .then(res => {\n        return setActors(res.cast);\n      })\n      .catch(error => setIsError(error.message))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  useEffect(() => {\n    window.scrollTo(0, 700);\n  }, [actors]);\n\n  return (\n    <Container>\n      {actors.length !== 0 && (\n        <List>\n          {actors.map(actor => {\n            return (\n              <Item key={actor.id}>\n                <img\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                      : DEFAULT_IMG\n                  }\n                  alt=\"\"\n                  width=\"100\"\n                  height=\"140\"\n                />\n                <Name>{actor.name}</Name>\n                <RoleText>Character:{actor.character}</RoleText>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n      {actors.length === 0 && <p>Sorry, no information...</p>}\n\n      {isLoading && <Loader />}\n      {isError && <h5 textAlign=\"center\">Sorry. {isError} ðŸ˜­</h5>}\n    </Container>\n  );\n};\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export async function fetchData(url) {\n  return await fetch(url, {\n    headers: {\n      accept: 'application/json',\n      Authorization: 'd9e80b20e643122ebd230a9efed67c63',\n    },\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["Container","styled","List","Item","Name","RoleText","useState","actors","setActors","movieId","useParams","isLoading","setIsLoading","isError","setIsError","useEffect","fetchData","BASE_URL","API_KEY","then","res","cast","catch","error","message","finally","window","scrollTo","length","map","actor","src","profile_path","alt","width","height","name","character","id","Loader","textAlign","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","url","fetch","headers","accept","Authorization","response","ok","Error","status","json"],"sourceRoot":""}