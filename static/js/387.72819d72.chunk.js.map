{"version":3,"file":"static/js/387.72819d72.chunk.js","mappings":"+PAEaA,EAAYC,EAAAA,EAAAA,IAAH,2EAMTC,EAAOD,EAAAA,EAAAA,GAAH,8HAQJE,EAAOF,EAAAA,EAAAA,GAAH,6TAcJG,EAAOH,EAAAA,EAAAA,EAAH,2GAMJI,EAAWJ,EAAAA,EAAAA,EAAH,+C,SCuBrB,EApDa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbI,MAAM,WAAD,OACQC,EAAAA,GADR,kBAC0BR,EAD1B,2CACoES,EAAAA,KAEtEC,MAAK,SAAAC,GACJ,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAAG,GACJ,OAAOd,EAAUc,EAAIC,KACtB,IACAC,OAAM,SAAAC,GAAK,OAAIX,EAAWW,EAAMC,QAArB,IACXC,QAAQf,GAAa,GACzB,GAAE,CAACH,KAEJM,EAAAA,EAAAA,YAAU,WACRa,OAAOC,SAAS,EAAG,IACpB,GAAE,CAACtB,KAGF,UAACP,EAAD,WACqB,IAAlBO,EAAOuB,SACN,SAAC5B,EAAD,UACGK,EAAOwB,KAAI,SAAAC,GACV,OACE,UAAC7B,EAAD,YACE,gBACE8B,IAAG,0CAAqCD,EAAME,cAC9CC,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,SAACjC,EAAD,UAAO4B,EAAMM,QACb,UAACjC,EAAD,WAAU,aAAW2B,EAAMO,eARlBP,EAAMQ,GAWpB,MAGc,IAAlBjC,EAAOuB,SAAgB,uBAAG,6BAE1BnB,IAAa,SAAC8B,EAAA,EAAD,IACb5B,IAAW,gBAAI6B,UAAU,SAAd,UAAuB,UAAQ7B,EAAQ,qBAGxD,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 940px;\n  margin: :0;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  margin: 0;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n  background-color: rgba(100, 10, 10, 0.2);\n  width: 200px;\n  height: 300px;\n  border-radius: 10px;\n  padding: 10px;\n  box-shadow: 5px 5px 5px rgba(100, 100, 100, 0.3);\n`;\n\nexport const Name = styled.p`\n  font-size: 25px;\n  font-weight: 600;\n  margin: 15px 0;\n  text-align: center;\n`;\nexport const RoleText = styled.p`\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY } from 'components/App';\nimport { BASE_URL } from 'components/App';\nimport { Loader } from 'components/Loader/Loader';\nimport { Item, List, Name, RoleText, Container } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\n      `https://${BASE_URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(res => {\n        return setActors(res.cast);\n      })\n      .catch(error => setIsError(error.message))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  useEffect(() => {\n    window.scrollTo(0, 700);\n  }, [actors]);\n\n  return (\n    <Container>\n      {actors.length !== 0 && (\n        <List>\n          {actors.map(actor => {\n            return (\n              <Item key={actor.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                  alt=\"\"\n                  width=\"100\"\n                  height=\"140\"\n                />\n                <Name>{actor.name}</Name>\n                <RoleText>Character:{actor.character}</RoleText>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n      {actors.length === 0 && <p>Sorry, no information...</p>}\n\n      {isLoading && <Loader />}\n      {isError && <h5 textAlign=\"center\">Sorry. {isError} ðŸ˜­</h5>}\n    </Container>\n  );\n};\nexport default Cast;\n"],"names":["Container","styled","List","Item","Name","RoleText","useState","actors","setActors","movieId","useParams","isLoading","setIsLoading","isError","setIsError","useEffect","fetch","BASE_URL","API_KEY","then","response","json","res","cast","catch","error","message","finally","window","scrollTo","length","map","actor","src","profile_path","alt","width","height","name","character","id","Loader","textAlign"],"sourceRoot":""}